
import matplotlib.pyplot as plt
import seaborn as sns

import numpy as np
import pandas as pd
import os

class results_store:
    # exp1
    q1_sb_no_rtg_dsa = [29.0, 27.466667, 48.555557, 48.555557, 56.125, 41.7, 38.636364, 40.6, 36.916668, 40.1, 50.444443, 71.333336, 77.833336, 50.875, 55.5, 70.0, 41.5, 40.0, 37.272728, 35.583332, 40.9, 38.583332, 35.166668, 51.375, 51.0, 71.14286, 49.22222, 58.625, 74.166664, 63.142857, 59.285713, 51.0, 91.6, 54.5, 64.71429, 74.666664, 59.0, 57.125, 52.75, 43.0, 36.5, 34.333332, 30.642857, 26.933332, 26.0625, 30.071428, 27.066668, 26.1875, 28.266666, 26.933332, 27.266666, 27.533333, 25.75, 26.1875, 24.117647, 27.2, 27.0625, 30.76923, 33.23077, 36.545456, 33.666668, 40.7, 37.5, 45.444443, 38.0, 58.285713, 54.0, 58.142857, 37.18182, 51.25, 48.333332, 50.75, 60.142857, 90.8, 54.0, 51.5, 48.333332, 50.375, 82.8, 87.2, 88.2, 85.2, 60.142857, 59.75, 82.0, 64.57143, 59.285713, 67.666664, 88.8, 86.0, 78.333336, 101.5, 111.0, 75.333336, 72.0, 93.8, 72.166664, 91.0, 90.8, 117.0]
    q1_sb_rtg_dsa = [30.214285, 38.545456, 53.875, 44.77778, 64.71429, 58.42857, 122.0, 126.5, 142.0, 127.0, 161.33333, 200.0, 146.25, 200.0, 200.0, 174.33333, 142.33333, 200.0, 135.66667, 200.0, 103.4, 61.42857, 41.81818, 36.416668, 35.0, 57.125, 41.0, 72.833336, 86.2, 119.0, 139.66667, 161.66667, 200.0, 200.0, 200.0, 200.0, 186.33333, 179.66667, 162.33333, 153.0, 187.66667, 193.66667, 186.66667, 200.0, 153.33333, 180.33333, 200.0, 180.66667, 177.33333, 150.0, 150.66667, 160.0, 162.0, 200.0, 186.66667, 200.0, 200.0, 200.0, 181.33333, 164.66667, 178.0, 168.0, 152.33333, 149.33333, 144.66667, 139.33333, 143.66667, 145.66667, 131.0, 151.0, 151.0, 146.66667, 146.66667, 165.66667, 162.33333, 163.0, 182.33333, 190.66667, 200.0, 199.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]
    q1_sb_rtg_na = [35.46154, 40.3, 53.375, 130.5, 68.71429, 73.0, 95.8, 113.4, 113.5, 195.66667, 147.0, 187.66667, 170.0, 200.0, 183.66667, 178.0, 200.0, 200.0, 146.25, 168.66667, 142.33333, 117.5, 125.0, 124.0, 116.25, 115.75, 139.33333, 176.33333, 200.0, 200.0, 200.0, 196.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 196.66667, 200.0, 164.66667, 169.66667, 145.0, 200.0, 200.0, 111.5, 200.0, 121.5, 125.25, 119.25, 113.0, 117.0, 127.25, 134.25, 140.33333, 169.33333, 177.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]
    q1_lb_no_rtg_dsa = [33.54, 33.42, 45.8, 61.29, 105.0, 67.86, 57.29, 89.4, 75.0, 69.0, 43.8, 50.33, 43.3, 50.88, 55.38, 84.0, 78.5, 105.0, 72.67, 53.62, 46.0, 45.22, 45.78, 47.56, 41.9, 33.31, 30.92, 30.93, 24.59, 24.18, 25.25, 29.36, 31.46, 33.67, 41.3, 47.22, 46.67, 72.33, 67.33, 91.0, 67.17, 97.4, 91.8, 100.25, 96.6, 112.5, 100.5, 80.2, 92.2, 60.86, 71.5, 57.14, 46.44, 41.1, 37.08, 34.67, 31.46, 29.64, 32.54, 39.45, 40.9, 44.78, 55.5, 71.86, 79.33, 108.75, 117.75, 102.0, 101.25, 113.0, 139.0, 139.33, 100.0, 89.6, 112.8, 135.25, 137.67, 147.67, 168.67, 198.67, 184.67, 190.67, 200.0, 151.67, 161.0, 147.67, 146.0, 152.67, 127.75, 147.25, 117.75, 106.8, 88.8, 64.29, 72.67, 59.14, 80.17, 59.29, 72.0, 68.5]
    q1_lb_rtg_dsa = [32.62, 41.7, 57.29, 83.0, 108.5, 63.86, 84.17, 85.8, 112.25, 170.0, 148.33, 145.67, 200.0, 170.33, 200.0, 159.67, 126.5, 148.25, 136.0, 113.75, 75.67, 93.0, 62.38, 80.4, 112.5, 81.6, 110.5, 130.5, 132.5, 139.0, 170.33, 180.67, 173.0, 195.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 166.67, 200.0, 143.67, 99.6, 200.0, 143.67, 200.0, 200.0, 180.0, 196.0, 200.0, 200.0, 200.0, 155.33, 200.0, 160.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 165.67, 124.75, 102.0, 113.75, 93.2, 115.5, 106.0, 108.5, 111.25, 115.25, 118.75, 125.25, 131.5, 146.67, 147.67, 154.33, 162.0, 155.67]
    q1_lb_rtg_na = [32.62, 37.64, 53.11, 113.0, 102.5, 93.8, 117.5, 112.75, 136.33, 138.0, 200.0, 200.0, 200.0, 169.0, 178.67, 184.67, 159.67, 160.0, 186.0, 200.0, 169.0, 167.67, 185.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 195.0, 200.0, 200.0, 200.0, 139.33, 200.0, 200.0, 200.0, 200.0, 169.67, 157.0, 140.67, 122.0, 138.67, 135.67, 137.0, 171.67, 174.67, 189.67, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0, 200.0]

    # exp2




def set_plot_env(iterations, rewards_dict, exp_name):

    plt.figure(figsize=(10,5))
    style = "whitegrid"
    sns.set_theme(style=style) # background color
    ax = plt.gca()

    # rewards_dist {'name':[], 'rewards]':[]}
    color_list = ['b', 'r', 'y', 'g', 'm', 'k']
    for idx, name in enumerate(rewards_dict['name']):
        plot_reward(ax, rewards_dict['rewards'][idx], name, color=color_list[idx])

    ax.legend(loc='center right')
    ax.set_xlabel('Iterations')
    ax.set_ylabel('Return')
    ax.set_title('return of ' + exp_name +' experiment')
    ax.set_xlim([-0.5,10])

    exp_dir = 'plots/'
    if not os.path.exists(exp_dir):
        os.makedirs(exp_dir)
    plt.savefig(fname=exp_dir + 'figure-2_' + exp_name + '.png', format='png')


def plot_reward(ax, rewards, name, color):
    rewards = np.array(rewards)
    iterations = np.arange(rewards.shape[0])
    ax.plot(iterations, rewards, color=color, label=name)


if __name__ == '__main__':
    r = results_store()

    # exp1
    exp1_f1 = {'name':['q1_sb_no_rtg_dsa', 'q1_sb_rtg_dsa', 'q1_lb_no_rtg_dsa'], 'rewards':[r.q1_sb_no_rtg_dsa, r.q1_sb_rtg_dsa, r.q1_lb_no_rtg_dsa])
    exp_f2 = {'name':['q1_lb_no_rtg_dsa', 'q1_lb_rtg_dsa', 'q1_lb_rtg_na'], 'rewards':[r.q1_lb_no_rtg_dsa, r.q1_lb_rtg_dsa, r.q1_lb_rtg_na]}

    # exp2
    


